/* 
 * Werewolf Engine
 *
 * This is a werewolf game engine for REST access. It is primarily developed for CPE200 class at Computer Engineering, Chiang Mai University.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: pruetboonma@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using WerewolfAPI.Client;
using WerewolfAPI.Api;
using WerewolfAPI.Model;

namespace WerewolfAPI.Test
{
    /// <summary>
    ///  Class for testing PlayerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PlayerApiTests
    {
        private PlayerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PlayerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PlayerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PlayerApi
            //Assert.IsInstanceOfType(typeof(PlayerApi), instance, "instance is a PlayerApi");
        }

        
        /// <summary>
        /// Test AddPlayer
        /// </summary>
        [Test]
        public void AddPlayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Player body = null;
            //instance.AddPlayer(body);
            
        }
        
        /// <summary>
        /// Test DeletePlayer
        /// </summary>
        [Test]
        public void DeletePlayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? playerId = null;
            //instance.DeletePlayer(playerId);
            
        }
        
        /// <summary>
        /// Test FindPlayersByGame
        /// </summary>
        [Test]
        public void FindPlayersByGameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gameID = null;
            //var response = instance.FindPlayersByGame(gameID);
            //Assert.IsInstanceOf<List<Player>> (response, "response is List<Player>");
        }
        
        /// <summary>
        /// Test GetPlayerById
        /// </summary>
        [Test]
        public void GetPlayerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? playerId = null;
            //var response = instance.GetPlayerById(playerId);
            //Assert.IsInstanceOf<Player> (response, "response is Player");
        }
        
        /// <summary>
        /// Test LoginPlayer
        /// </summary>
        [Test]
        public void LoginPlayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Player body = null;
            //var response = instance.LoginPlayer(body);
            //Assert.IsInstanceOf<Player> (response, "response is Player");
        }
        
        /// <summary>
        /// Test LogoutPlayer
        /// </summary>
        [Test]
        public void LogoutPlayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionID = null;
            //var response = instance.LogoutPlayer(sessionID);
            //Assert.IsInstanceOf<List<Player>> (response, "response is List<Player>");
        }
        
        /// <summary>
        /// Test PlayerGet
        /// </summary>
        [Test]
        public void PlayerGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PlayerGet();
            //Assert.IsInstanceOf<List<Player>> (response, "response is List<Player>");
        }
        
        /// <summary>
        /// Test UpdatePlayer
        /// </summary>
        [Test]
        public void UpdatePlayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Player body = null;
            //instance.UpdatePlayer(body);
            
        }
        
    }

}
